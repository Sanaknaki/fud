{"version":3,"sources":["img/icon-white.png","js/component/RestaurantCard.jsx","js/component/DropDownSearch.jsx","js/component/Jumbo.jsx","js/component/ReviewCard.jsx","js/component/RandomReviews.jsx","js/configuration.js","js/view/Home.jsx","js/component/Badge.jsx","js/view/Restaurant.jsx","js/component/NavBar.jsx","serviceWorker.js","index.js"],"names":["module","exports","RestaurantCard","Jumbotron","className","style","backgroundImage","this","props","image","name","bottom","address","rating","numberOfRatings","React","Component","DropDownSearch","state","searchQuery","updateSearchQuery","bind","list","returnList","forEach","item","push","Dropdown","Item","key","onClick","selectFilter","href","Row","Col","md","icon","e","setState","target","value","InputGroup","placeholder","DropdownButton","as","Prepend","variant","title","chosenFilter","renderListOfFilters","listOfSearchFilters","FormControl","length","onChange","Append","Button","outline","borderRadius","search","disabled","searching","Jumbo","renderJumboBody","body","Object","keys","Fragment","Container","fontSize","backgroundColor","paddingLeft","paddingRight","restaurantJumbo","cuisines","price","location","timings","imageUrl","ReviewCard","renderCardLink","limit","review","review_text","substring","card","Card","marginBottom","minHeight","Header","borderBottom","src","user","profile_image","draggable","alt","Body","color","rating_color","renderReview","position","review_time_friendly","id","to","pathname","RandomReviews","data","reviews","renderReviews","randomCuisineNumber","Math","floor","random","randomCuisine","cuisine_id","axios","get","api_key","then","res","i","obj","randomRestaurantNumber","restaurants","restaurant","listOfReviews","reviewObject","user_reviews","sort","a","b","Configuration","Home","searchResult","query","headers","viewingRestaurant","renderRandomPopularRestaurant","document","cuisineList","dollarSign","randomlySelectedIndex","best_rated_restaurant","price_range","concat","featured_image","user_rating","aggregate_rating","all_reviews_count","filter","temp","cuisine","toLowerCase","cuisine_name","resultsFound","viewDetails","underJumbo","renderRestaurantCard","marginLeft","marginRight","Badge","trigger","display","maxWidth","border","padding","Restaurant","hasTableBooking","hasOnlineDelivery","isDeliveringNow","match","params","has_table_booking","has_online_delivery","is_delivering_now","span","offset","NavBar","Navbar","fixed","Brand","IconWhite","height","withRouter","Boolean","window","hostname","ReactDOM","render","exact","path","component","from","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,wC,qPCiB5BC,E,iLAVP,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,0BAA0BC,MAAO,CAACC,gBAAgB,gEAAD,OAAkEC,KAAKC,MAAMC,MAA7E,OAClE,wBAAIL,UAAU,cAAcG,KAAKC,MAAME,MACvC,0BAAMN,UAAU,QAAQC,MAAO,CAACM,OAAQ,mBAAoBJ,KAAKC,MAAMI,SACvE,0BAAMR,UAAU,QAAQC,MAAO,CAACM,OAAQ,mBAAoBJ,KAAKC,MAAMK,OAAvE,KAAiFN,KAAKC,MAAMM,gBAA5F,U,GANaC,IAAMC,W,iEC+CpBC,E,YA9CX,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KAEDU,MAAQ,CACTC,YAAa,IAGjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAPV,E,iFAUCC,GAAO,IAAD,OAClBC,EAAa,GAMjB,OAJAD,EAAKE,SAAQ,SAAAC,GACTF,EAAWG,KAAK,kBAACC,EAAA,EAASC,KAAV,CAAeC,IAAKJ,EAAKf,KAAMoB,QAAS,kBAAM,EAAKtB,MAAMuB,aAAaN,EAAKf,OAAOsB,KAAK,KAAI,kBAACC,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAG/B,UAAU,aAAaqB,EAAKW,MAAW,kBAACF,EAAA,EAAD,CAAKC,GAAI,GAAIV,EAAKf,YAGlLa,I,wCAGOc,GACd9B,KAAK+B,SAAS,CACVnB,YAAakB,EAAEE,OAAOC,U,+BAIpB,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAYrC,UAAU,OAAOsC,YAAY,MACrC,kBAACC,EAAA,EAAD,CAAgBC,GAAIH,IAAWI,QAASC,QAAQ,aAAaC,MAAOxC,KAAKC,MAAMwC,cAC1EzC,KAAK0C,oBAAoB1C,KAAKC,MAAM0C,sBAEzC,kBAACC,EAAA,EAAD,CAAaX,MAAyC,IAAlCjC,KAAKW,MAAMC,YAAYiC,OAAe,GAAK7C,KAAKW,MAAMC,YAAakC,SAAU9C,KAAKa,kBAAmBhB,UAAU,mBAAmBsC,YAAY,WAElK,kBAACD,EAAA,EAAWa,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQlD,MAAO,CAACmD,QAAS,kBAAmBC,aAAc,mBAAoB3B,QAAS,kBAAM,EAAKtB,MAAMkD,OAAO,EAAKxC,MAAMC,cAAcf,UAAU,aAAauD,WAA8C,IAAlCpD,KAAKW,MAAMC,YAAYiC,SAAgB7C,KAAKC,MAAMoD,YACvNrD,KAAKC,MAAMoD,UAAa,uBAAGxD,UAAU,2BAAgC,uBAAGA,UAAU,yB,GArC/EW,IAAMC,W,gBCgFpB6C,E,YA5EX,WAAYrD,GAAQ,IAAD,8BACf,4CAAMA,KAEDU,MAAQ,CACTgC,oBAAqB,CAAC,CAACd,KAAM,uBAAGhC,UAAU,mBAAuBM,KAAK,UAAW,CAAC0B,KAAM,uBAAGhC,UAAU,oBAAwBM,KAAK,cAGtI,EAAKoD,gBAAkB,EAAKA,gBAAgBzC,KAArB,gBAPR,E,+EAWf,IAAI0C,EAAO,GAqDX,OAnDsC,IAAnCC,OAAOC,KAAK1D,KAAKC,OAAO4C,OACvBW,EAAKrC,KACD,kBAAC,IAAMwC,SAAP,CAAgBrC,IAAK,GACjB,kBAACsC,EAAA,EAAD,KACI,kBAAClC,EAAA,EAAD,CAAK7B,UAAU,eACX,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,IACL,wBAAI/B,UAAU,cAAd,SAA8B,0BAAMA,UAAU,OAAOC,MAAO,CAAC+D,SAAU,SAAS,kBAAC,IAAD,CAAO/D,MAAO,CAACgE,gBAAiB,YAAhC,aAChF,kBAAC,EAAD,CACIT,UAAWrD,KAAKC,MAAMoD,UACtBF,OAAQnD,KAAKC,MAAMkD,OACnB3B,aAAcxB,KAAKC,MAAMuB,aACzBiB,aAAczC,KAAKC,MAAMwC,aACzBE,oBAAqB3C,KAAKW,MAAMgC,yBAMhD,kBAACjB,EAAA,EAAD,CAAK7B,UAAU,2BACX,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,EAAG/B,UAAU,YAAYC,MAAO,CAACiE,YAAa,QACnD,0BAAMlE,UAAU,SAAhB,2BAEJ,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,EAAG/B,UAAU,aAAaC,MAAO,CAACkE,aAAc,QACrD,0BAAMnE,UAAU,oBAAmB,0BAAMA,UAAU,QAAQG,KAAKC,MAAMgE,gBAAgB9D,MAAtF,WAAsGH,KAAKC,MAAMgE,gBAAgBC,SAAjI,WAA8IlE,KAAKC,MAAMgE,gBAAgB3D,OAAzK,KAAmL,IAAMN,KAAKC,MAAMgE,gBAAgB1D,gBAAkB,IAAtO,WAA8OP,KAAKC,MAAMgE,gBAAgBE,WAMzRX,EAAKrC,KACD,kBAAC,IAAMwC,SAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAAClC,EAAA,EAAD,CAAK7B,UAAU,qBACX,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,IACL,wBAAI/B,UAAU,8BAA8BG,KAAKC,MAAMgE,gBAAgB9D,SAKnF,kBAACuB,EAAA,EAAD,CAAK7B,UAAU,2BACX,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,EAAG/B,UAAU,YAAYC,MAAO,CAACiE,YAAa,QACnD,0BAAMlE,UAAU,SAASG,KAAKC,MAAMgE,gBAAgBG,SAAS/D,UAEjE,kBAACsB,EAAA,EAAD,CAAKC,GAAI,EAAG/B,UAAU,aAAaC,MAAO,CAACkE,aAAc,QACrD,0BAAMnE,UAAU,oBAAoBG,KAAKC,MAAMgE,gBAAgBI,QAA/D,WAA2ErE,KAAKC,MAAMgE,gBAAgBC,SAAtG,WAAmHlE,KAAKC,MAAMgE,gBAAgBE,WAO3JX,I,+BAIP,OACI,kBAAC5D,EAAA,EAAD,CAAWE,MAAO,CAACC,gBAAgB,gEAAD,OAAkEC,KAAKC,MAAMgE,gBAAgBK,SAA7F,OAC7BtE,KAAKuD,uB,GAvEF/C,IAAMC,W,iBC4DX8D,E,YA1DX,WAAYtE,GAAQ,IAAD,8BACf,4CAAMA,KAEDuE,eAAiB,EAAKA,eAAe1D,KAApB,gBAHP,E,0EAKN2D,GAGT,OAAGzE,KAAKC,MAAMyE,OAAOA,OAAOC,YAAY9B,OAAS4B,EAC9BzE,KAAKC,MAAMyE,OAAOA,OAAOC,YAAYC,UAAU,EAAGH,GAHxD,MAM6C,IAAhDzE,KAAKC,MAAMyE,OAAOA,OAAOC,YAAY9B,OAC5B,uBAIR7C,KAAKC,MAAMyE,OAAOA,OAAOC,c,uCAKpC,IAAIE,EACA,kBAACC,EAAA,EAAD,CAAMhF,MAAO,CAACiF,aAAc,OAAQC,UAAW,UACvC,kBAACF,EAAA,EAAKG,OAAN,CAAanF,MAAO,CAACoF,aAAc,SAC/B,yBAAKC,IAAKnF,KAAKC,MAAMyE,OAAOA,OAAOU,KAAKC,cAAexF,UAAU,sBAAsByF,WAAW,EAAOC,IAAI,WAC7G,0BAAM/C,MAAM,YAAYxC,KAAKC,MAAMyE,OAAOA,OAAOU,KAAKjF,OAE1D,kBAAC2E,EAAA,EAAKU,KAAN,KACI,gCAAY3F,UAAU,+BAClB,4BAAKG,KAAKC,MAAMyE,OAAOvE,MACvB,wBAAIN,UAAU,OAAOC,MAAO,CAAC2F,MAAM,IAAIzF,KAAKC,MAAMyE,OAAOA,OAAOgB,eAAgB1F,KAAKC,MAAMyE,OAAOA,OAAOpE,QACzG,uBAAGT,UAAU,YAAYC,MAAO,CAAC+D,SAAU,SAAU,IAAK7D,KAAK2F,aAAa,KAAM,KAElF,4BAAQ7F,MAAO,CAAC8F,SAAU,WAAYxF,OAAQ,OAAQP,UAAU,qBAC5D,0BAAMC,MAAO,CAAC+D,SAAU,QAASrB,MAAM,QAAQxC,KAAKC,MAAMyE,OAAOA,OAAOmB,0BAOhG,OAAG7F,KAAKC,MAAMyE,OAAOoB,GAEb,kBAAC,IAAD,CAAMjG,UAAU,OAAOkG,GAAI,CAACC,SAAS,YAAD,OAAchG,KAAKC,MAAMyE,OAAOoB,MAC/DjB,GAIFA,I,+BAKX,OAAO7E,KAAKwE,qB,GAvDKhE,IAAMC,WCgFhBwF,E,YAhFX,WAAYhG,GAAQ,IAAD,8BACf,4CAAMA,KAEDU,MAAQ,CACTuF,KAAM,GACNC,QAAS,IAGb,EAAKC,cAAgB,EAAKA,cAActF,KAAnB,gBARN,E,iFAWE,IAAD,OAEVuF,EAAsBC,KAAKC,MAAMD,KAAKE,SAAWxG,KAAKC,MAAMiE,SAASrB,QACrE4D,EAAgBzG,KAAKC,MAAMiE,SAASmC,GAAqBK,WAE/DC,IAAMC,IAAI,wFAAyFH,EAAgB,eAAgBzG,KAAKC,MAAM4G,SAASC,MAAK,SAAAC,GAGxJ,IAFA,IAAIhG,EAAK,GAEDiG,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACnB,IAAIC,EAAM,GACNC,EAAyBZ,KAAKC,MAAMD,KAAKE,SAAWO,EAAIb,KAAKiB,YAAYtE,QAE7EoE,EAAInB,GAAKiB,EAAIb,KAAKiB,YAAYD,GAAwBE,WAAWtB,GACjEmB,EAAI9G,KAAO4G,EAAIb,KAAKiB,YAAYD,GAAwBE,WAAWjH,KACnEY,EAAKI,KAAK8F,GAGd,OAAOlG,KACR+F,MAAM,SAAAC,GACLA,EAAI9F,SAAQ,SAAAgG,GACRN,IAAMC,IAAI,yDAAyDK,EAAInB,GAAI,EAAK7F,MAAM4G,SAASC,MAAK,SAAAC,GAEhG,IAAIM,EAAgB,EAAK1G,MAAMwF,QAE3BmB,EAAe,GACnBA,EAAaxB,GAAKmB,EAAInB,GACtBwB,EAAanH,KAAO8G,EAAI9G,KACxBmH,EAAa5C,OAASqC,EAAIb,KAAKqB,aAAajB,KAAKC,MAAMD,KAAKE,SAAWO,EAAIb,KAAKqB,aAAa1E,SAAS6B,OAEtG2C,EAAclG,KAAKmG,GAEnB,EAAKvF,SAAS,CACVoE,QAASkB,e,sCAOb,IACNlB,EAAYnG,KAAKW,MAAjBwF,QACFkB,EAAgB,GAYpB,OAVAlB,EAAQqB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEhD,OAAOpE,OAASmH,EAAE/C,OAAOpE,UAElD6F,EAAQlF,SAAQ,SAAAyD,GACZ2C,EAAclG,KACV,kBAACQ,EAAA,EAAD,CAAKL,IAAKoD,EAAOoB,GAAIlE,GAAI,GACrB,kBAAC,EAAD,CAAY8C,OAAQA,SAM5B,kBAAChD,EAAA,EAAD,KACK2F,K,+BAMT,OACI,kBAAC,IAAM1D,SAAP,KACK3D,KAAKoG,qB,GA3EM5F,IAAMC,WCR5BkH,EACO,mCCgMEC,E,YAjLd,WAAY3H,GAAQ,IAAD,8BAClB,4CAAMA,KAEDU,MAAQ,CACZuD,SAAU,GACV2D,aAAc,GACdpF,aAAc,SACdqF,MAAO,GACEzE,WAAW,EACpBwD,QAAS,CAAEkB,QAAS,CAAC,WAAYJ,IAExB1D,gBAAiB,CACb9D,KAAM,GACNmE,SAAU,GACVH,MAAO,GACPD,SAAU,GACV5D,OAAQ,GACRC,gBAAiB,IAG9ByH,kBAAmB,IAGpB,EAAKxG,aAAe,EAAKA,aAAaV,KAAlB,gBACd,EAAKqC,OAAS,EAAKA,OAAOrC,KAAZ,gBACd,EAAKmH,8BAAgC,EAAKA,8BAA8BnH,KAAnC,gBAzBzB,E,iFA4BE,IAAD,OAEnBoH,SAAS1F,MAAQ,SAEXxC,KAAKiI,gCAEXtB,IAAMC,IAAI,6DAA8D5G,KAAKW,MAAMkG,SAASC,MAAK,SAAAqB,GAChG,EAAKpG,SAAS,CACbmC,SAAUiE,EAAYjC,KAAKhC,gB,sDAKM,IAAD,OAE5ByC,IAAMC,IAAI,wFAAyF5G,KAAKW,MAAMkG,SAASC,MAAK,SAAAC,GAKxH,IAHA,IAAIqB,EAAa,GACbC,EAAwB/B,KAAKC,MAAMD,KAAKE,SAAWO,EAAIb,KAAKoC,sBAAsBzF,QAE9EmE,EAAE,EAAGA,EAAID,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWmB,YAAavB,IAC3FoB,EAAaA,EAAWI,OAAO,KAGnC,EAAKzG,SAAS,CACVkC,gBAAiB,CACb9D,KAAM4G,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWjH,KACvEmE,SAAUyC,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWqB,eAC3EtE,MAAOiE,EACPlE,SAAU6C,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWlD,SAC3E5D,OAAQyG,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWsB,YAAYC,iBACrFpI,gBAAiBwG,EAAIb,KAAKoC,sBAAsBD,GAAuBjB,WAAWwB,0B,mCAMxFC,GACN7I,KAAK+B,SAAS,CACVU,aAAcoG,M,6BAIlBf,GAAQ,IAAD,OAOb,IAN4B,IAAzB9H,KAAKW,MAAM0C,WACbrD,KAAK+B,SAAS,CACbsB,WAAW,IAIkB,aAA5BrD,KAAKW,MAAM8B,aAA6B,CACjC,IAAIqG,GAAO,EAEpB9I,KAAKW,MAAMuD,SAASjD,SAAQ,SAAA8H,GACxBjB,EAAMkB,gBAAkBD,EAAQA,QAAQE,aAAaD,gBACxCF,GAAO,EACtBnC,IAAMC,IAAI,iGAAqGmC,EAAQA,QAAQrC,WAAY,EAAK/F,MAAMkG,SAASC,MAAK,SAAAC,GACnK,EAAKhF,SAAS,CACb8F,aAAcd,EAAIb,KAAKiB,YACF9D,WAAW,EACX6F,cAAc,EACnCpB,MAAOA,WAMCgB,GACC9I,KAAK+B,SAAS,CACV8F,aAAc,GACdxE,WAAW,EACX6F,cAAc,EACdpB,MAAOA,SAIxBnB,IAAMC,IAAI,iFAAiFkB,EAAM,kBAAoB9H,KAAKW,MAAMkG,SAASC,MAAK,SAAAC,GAC7I,EAAKhF,SAAS,CACb8F,aAAcd,EAAIb,KAAKiB,YACR9D,WAAW,EACX6F,cAAc,EAC7BpB,MAAOA,S,6CAMa,IAAD,OACtB,GAAsC,IAAnC9H,KAAKW,MAAMkH,aAAahF,OAAc,CACxC,IAAI9B,EAAO,GA+BX,OA7BAA,EAAKI,KAAK,kBAACQ,EAAA,EAAD,CAAKL,IAAK,UAAWM,GAAI,GAAI/B,UAAU,aAAvC,eAAgEG,KAAKW,MAAMmH,QAErF9H,KAAKW,MAAMkH,aAAa5G,SAAQ,SAAAC,GAC/BH,EAAKI,KACJ,kBAACQ,EAAA,EAAD,CAAKL,IAAK,EAAKrB,MAAM6F,GAAIlE,GAAI,GAC5B,kBAAC,IAAD,CAAMmE,GAAI,CAACC,SAAS,YAAD,OAAc9E,EAAKkG,WAAWtB,MAChD,kBAAC,EAAD,CACCqD,YAAa,EAAKA,YAClBjI,KAAMA,EACNf,KAAMe,EAAKkG,WAAWjH,KACtBE,QAASa,EAAKkG,WAAWhD,SAAS/D,QAClCC,OAAQY,EAAKkG,WAAWsB,YAAYC,iBACpCpI,gBAAiBW,EAAKkG,WAAWwB,kBACjCzE,MAAOjD,EAAKkG,WAAWjD,MACvBjE,MAAOgB,EAAKkG,WAAWqB,uBAerB1H,EAEE,OACI,kBAACY,EAAA,EAAD,CAAKC,GAAI,IACL,mDAAyB5B,KAAKW,MAAMmH,U,+BAQtD,IAAIsB,EAAcpJ,KAAKW,MAAMuI,cAA+C,IAA/BlJ,KAAKW,MAAMuD,SAASrB,OAAgB,kBAACe,EAAA,EAAD,KAAW,kBAAClC,EAAA,EAAD,KAAM1B,KAAKqJ,yBAA4C,yBAAKvJ,MAAO,CAACwJ,WAAY,OAAQC,YAAa,SAAS,uCAAgB,kBAAC,EAAD,CAAe1C,QAAS7G,KAAKW,MAAMkG,QAAS3C,SAAUlE,KAAKW,MAAMuD,YAE3R,OACC,kBAAC,IAAMP,SAAP,KACa,kBAAC,EAAD,CACIM,gBAAiBjE,KAAKW,MAAMsD,gBAC3CzC,aAAcxB,KAAKwB,aACnBiB,aAAczC,KAAKW,MAAM8B,aACzBY,UAAWrD,KAAKW,MAAM0C,UACPF,OAAQnD,KAAKmD,SAE5BiG,O,GA5Kc5I,IAAMC,WCEV+I,E,iLAVP,IAAIC,EAAWzJ,KAAKC,MAAMwJ,QAAW,QAAU,YAE/C,OACI,yBAAK3J,MAAO,CAAC4J,QAAS,eAAgBC,SAAU,QAASC,OAAQ,aAAeH,EAAShE,MAAOgE,EAASI,QAAS,kBAAmB3G,aAAc,SAC9IlD,KAAKC,MAAM4B,KADhB,IACsB,0BAAMhC,UAAU,cAAcG,KAAKC,MAAMuC,Y,GARvDhC,IAAMC,WCoIXqJ,E,YA1HX,WAAY7J,GAAQ,IAAD,8BACf,4CAAMA,KAEDU,MAAQ,CACTmF,GAAI,KACJuB,cAAe,GACf0C,gBAAiB,EACjBC,kBAAmB,EACnBC,gBAAiB,EAEjBhG,gBAAiB,CACb9D,KAAM,GACNmE,SAAU,GACVH,MAAO,GACPD,SAAU,GACV5D,OAAQ,GACRC,gBAAiB,GACjB8D,QAAS,GACTD,SAAU,IAEdyC,QAAS,CAAEkB,QAAS,CAAC,WAAYJ,KAGrC,EAAKvB,cAAgB,EAAKA,cAActF,KAAnB,gBAvBN,E,iFA0BE,IAAD,OAChB6F,IAAMC,IAAI,4DAA4D5G,KAAKC,MAAMiK,MAAMC,OAAOrE,GAAI9F,KAAKW,MAAMkG,SAASC,MAAK,SAAAC,GAGvH,IADA,IAAIqB,EAAa,GACTpB,EAAE,EAAGA,EAAID,EAAIb,KAAKqC,YAAavB,IACnCoB,EAAaA,EAAWI,OAAO,KAGnCN,SAAS1F,MAAQ,YAAWuE,EAAIb,KAAK/F,KAErC,EAAK4B,SAAS,CACV+D,GAAIiB,EAAIb,KAAKJ,GACbiE,gBAAiBhD,EAAIb,KAAKkE,kBAC1BJ,kBAAmBjD,EAAIb,KAAKmE,oBAC5BJ,gBAAiBlD,EAAIb,KAAKoE,kBAC1BhK,OAAQyG,EAAIb,KAAKwC,YAAYC,iBAC7BpI,gBAAiBwG,EAAIb,KAAK0C,kBAC1B3E,gBAAiB,CACb9D,KAAM4G,EAAIb,KAAK/F,KACfmE,SAAUyC,EAAIb,KAAKuC,eACnBtE,MAAOiE,EACPlE,SAAU6C,EAAIb,KAAKhC,SACnBE,SAAU2C,EAAIb,KAAK9B,SACnBC,QAAS0C,EAAIb,KAAK7B,gB,sCAMjB,IAAD,OAEZ,GAAuC,IAApCrE,KAAKW,MAAM0G,cAAcxE,OAcrB,CACH,IAAIsD,EAAS,GAgBb,OAdAA,EAAQhF,KACJ,kBAACQ,EAAA,EAAD,CAAK9B,UAAU,4BAA4B+B,GAAI,IAC3C,uBAAG/B,UAAU,QAAb,YAA8BG,KAAKW,MAAML,OAAzC,IAAyF,IAAtCN,KAAKW,MAAMJ,gBAAgBsC,OAAgB,GAAK,IAAI7C,KAAKW,MAAMJ,gBAAgB,OAI1IP,KAAKW,MAAM0G,cAAcpG,SAAQ,SAAAyD,GAC7ByB,EAAQhF,KACJ,kBAACQ,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,CAAY8C,OAAQA,SAKzByB,EA9BPQ,IAAMC,IAAI,yDAAyD5G,KAAKW,MAAMmF,GAAI9F,KAAKW,MAAMkG,SAASC,MAAK,SAAAC,GACvG,IAAIM,EAAgB,GAEpBN,EAAIb,KAAKqB,aAAatG,SAAQ,SAAAyD,GAC1B2C,EAAclG,KACVuD,MAIR,EAAK3C,SAAS,CACVsF,cAAeA,S,+BAyB3B,OACI,kBAAC,IAAM1D,SAAP,KACI,kBAAC,EAAD,CAAOM,gBAAiBjE,KAAKW,MAAMsD,kBACnC,kBAACL,EAAA,EAAD,CAAW9D,MAAO,CAACwJ,WAAY,OAAQC,YAAa,OAAQI,SAAU,SAClE,kBAACjI,EAAA,EAAD,CAAK7B,UAAU,aACX,kBAAC8B,EAAA,EAAD,CAAK9B,UAAU,6BAA6B+B,GAAI,GAC5C,kBAAC,EAAD,CAAO6H,QAASzJ,KAAKW,MAAMoJ,gBAAiBlI,KAAM,uBAAG/B,MAAO,CAACwJ,WAAY,MAAOC,YAAa,OAAQ1J,UAAU,iBAAqB2C,MAAO,mBAG/I,kBAACb,EAAA,EAAD,CAAK9B,UAAU,8BAA8B+B,GAAI,GAC7C,kBAAC,EAAD,CAAO6H,QAASzJ,KAAKW,MAAMqJ,kBAAmBnI,KAAM,uBAAG/B,MAAO,CAACwJ,WAAY,MAAOC,YAAa,OAAQ1J,UAAU,mBAAuB2C,MAAO,qBAGnJ,kBAACb,EAAA,EAAD,CAAK9B,UAAU,4BAA4B+B,GAAI,GAC3C,kBAAC,EAAD,CAAO6H,QAASzJ,KAAKW,MAAMsJ,gBAAiBpI,KAAM,uBAAG/B,MAAO,CAACwJ,WAAY,MAAOC,YAAa,OAAQ1J,UAAU,oBAAwB2C,MAAO,qBAItJ,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAE2I,KAAM,EAAGC,OAAQ,IACvBxK,KAAKoG,wB,GAlHT5F,IAAMC,W,kCCDzBgK,E,YACF,WAAYxK,GAAQ,IAAD,8BACf,4CAAMA,KAEDU,MAAQ,GAHE,E,sEAUf,OACI,kBAAC+J,EAAA,EAAD,CAAQC,MAAM,MAAM7K,MAAO,CAACgE,gBAAiB,gBACzC,kBAAC4G,EAAA,EAAOE,MAAR,KAAc,0BAAM/K,UAAU,SAAQ,kBAAC,IAAD,CAAMkG,GAAI,QAAO,yBAAKZ,IAAK0F,IAAWC,OAAQ,GAAIxF,WAAW,EAAOC,IAAI,iB,GAbzG/E,IAAMC,WAmBZsK,cAAWN,GClBNO,QACW,cAA7BC,OAAO7G,SAAS8G,UAEe,UAA7BD,OAAO7G,SAAS8G,UAEhBD,OAAO7G,SAAS8G,SAAShB,MACvB,2DCYNiB,IAASC,OAAO,mBAdH,WACT,OACI,kBAAC,IAAMzH,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0H,OAAK,EAACC,KAAM,OAAQC,UAAW3D,IACtC,kBAAC,IAAD,CAAO0D,KAAK,eAAeC,UAAWzB,IACtC,kBAAC,IAAD,CAAU0B,KAAK,YAAYzF,GAAG,cAMlC,MAAUmC,SAASuD,eAAe,SDqG5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,MAAK,SAAA+E,GACjCA,EAAaC,kB","file":"static/js/main.80daa9ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-white.7e410ef3.png\";","import React from 'react';\nimport '../../css/App.css';\n\nimport {Jumbotron} from 'react-bootstrap';\n\nclass RestaurantCard extends React.Component {\n    render() {\n        return (\n            <Jumbotron className=\"text-center result-card\" style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${this.props.image})`}}>\n                <h3 className=\"white bold\">{this.props.name}</h3>\n                <span className=\"white\" style={{bottom: \"0px !important\"}}>{this.props.address}</span>\n                <span className=\"white\" style={{bottom: \"0px !important\"}}>{this.props.rating} ({this.props.numberOfRatings})</span>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default RestaurantCard;","import React from 'react';\nimport '../../css/App.css';\n\nimport { InputGroup, Dropdown, DropdownButton, FormControl, Button, Row, Col } from 'react-bootstrap';\n\nclass DropDownSearch extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchQuery: \"\",\n        }\n\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\n    };\n\n    renderListOfFilters(list) {\n        let returnList = [];\n\n        list.forEach(item => {\n            returnList.push(<Dropdown.Item key={item.name} onClick={() => this.props.selectFilter(item.name)} href=\"#\"><Row><Col md={1} className=\"text-left\">{item.icon}</Col><Col md={8}>{item.name}</Col></Row></Dropdown.Item>);\n        });\n\n        return returnList;\n    };\n\n    updateSearchQuery(e) {\n        this.setState({\n            searchQuery: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <InputGroup className=\"mb-3\" placeholder=\"Hi\">\n                <DropdownButton as={InputGroup.Prepend} variant=\"red-button\" title={this.props.chosenFilter}>\n                    {this.renderListOfFilters(this.props.listOfSearchFilters)}\n                </DropdownButton>\n                <FormControl value={this.state.searchQuery.length === 0 ? \"\" : this.state.searchQuery} onChange={this.updateSearchQuery} className=\"drop-down-search\" placeholder=\"Search\" />\n\n                <InputGroup.Append>\n                    <Button style={{outline: \"none !important\", borderRadius: \"0px 5px 5px 0px\"}} onClick={() => this.props.search(this.state.searchQuery)} className=\"red-button\" disabled={((this.state.searchQuery.length === 0 || this.props.searching) ? true : false)}>\n                        {(this.props.searching) ? <i className=\"fas fa-spinner fa-spin\"></i> : <i className=\"fas fa-search\"></i>}\n                    </Button>\n                    \n                    {/* <span onClick={() => console.log(\"boop!\")} className=\"white randomizer\"><i className=\"fas fa-random\"></i></span> */}\n                </InputGroup.Append>\n            </InputGroup>\n        );\n    }\n}\n\nexport default DropDownSearch;","import React from 'react';\n\nimport '../../css/Restaurant.css';\n\nimport DropDownSearch from '../component/DropDownSearch.jsx';\n\nimport { Jumbotron, Col, Row, Container, Badge } from 'react-bootstrap';\n\nclass Jumbo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {            \n            listOfSearchFilters: [{icon: <i className=\"fas fa-comment\"></i>, name:\"Search\"}, {icon: <i className=\"fas fa-utensils\"></i>, name:\"Cuisines\"}],\n        }\n\n        this.renderJumboBody = this.renderJumboBody.bind(this);\n    };\n\n    renderJumboBody() {\n        let body = [];\n\n        if(Object.keys(this.props).length === 5) {\n            body.push(\n                <React.Fragment key={0}>\n                    <Container>\n                        <Row className=\"text-center\">\n                            <Col md={12}>\n                                <h1 className=\"white bold\">FÜD<span className=\"bold\" style={{fontSize: \"15px\"}}><Badge style={{backgroundColor: \"#C3423F\"}}>TORONTO</Badge></span></h1>\n                                <DropDownSearch \n                                    searching={this.props.searching} \n                                    search={this.props.search} \n                                    selectFilter={this.props.selectFilter} \n                                    chosenFilter={this.props.chosenFilter} \n                                    listOfSearchFilters={this.state.listOfSearchFilters} \n                                />\n                            </Col>\n                        </Row>\n                    </Container>\n                    \n                    <Row className=\"jumbotron-fud-favourite\">\n                        <Col md={6} className=\"text-left\" style={{paddingLeft: \"0px\"}}>\n                            <span className=\"white\">Daily Füd Favourite</span>\n                        </Col>\n                        <Col md={6} className=\"text-right\" style={{paddingRight: \"0px\"}}>\n                            <span className=\"white text-right\"><span className=\"bold\">{this.props.restaurantJumbo.name}</span> • {this.props.restaurantJumbo.cuisines} • {this.props.restaurantJumbo.rating}  {\"(\" + this.props.restaurantJumbo.numberOfRatings + \")\"} • {this.props.restaurantJumbo.price}</span>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n            );\n        } else {\n            body.push(\n                <React.Fragment>\n                    <Container>\n                        <Row className=\"white text-center\">\n                            <Col md={12}>\n                                <h1 className=\"jumbo-restaurant-text bold\">{this.props.restaurantJumbo.name}</h1>\n                            </Col>\n                        </Row>\n                    </Container>\n\n                    <Row className=\"jumbotron-fud-favourite\">\n                        <Col md={6} className=\"text-left\" style={{paddingLeft: \"0px\"}}>\n                            <span className=\"white\">{this.props.restaurantJumbo.location.address}</span>\n                        </Col>\n                        <Col md={6} className=\"text-right\" style={{paddingRight: \"0px\"}}>\n                            <span className=\"white text-right\">{this.props.restaurantJumbo.timings} • {this.props.restaurantJumbo.cuisines} • {this.props.restaurantJumbo.price}</span>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n            );\n        }\n\n        return body;\n    }\n\n    render() {\n        return (\n            <Jumbotron style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${this.props.restaurantJumbo.imageUrl})`}}>\n                {this.renderJumboBody()}\n\t\t\t</Jumbotron>\n        );\n    }\n}\n\nexport default Jumbo;","import React from 'react';\n\nimport '../../css/App.css';\n\nimport { Link } from 'react-router-dom';\n\nimport { Card } from 'react-bootstrap';\n\n\nclass ReviewCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderCardLink = this.renderCardLink.bind(this);\n    }\n    renderReview(limit) {\n        const dots = \"...\";\n        let editedString = \"\";\n        if(this.props.review.review.review_text.length > limit) {\n            editedString = this.props.review.review.review_text.substring(0, limit) + dots;\n\n            return editedString;\n        } else if(this.props.review.review.review_text.length === 0) {\n            editedString = \"No comment provided.\";\n\n            return editedString;\n        }else {\n            return this.props.review.review.review_text;\n        }\n    }\n\n    renderCardLink() {\n        let card = (\n            <Card style={{marginBottom: \"15px\", minHeight: \"380px\"}}>\n                    <Card.Header style={{borderBottom: \"none\"}}>\n                        <img src={this.props.review.review.user.profile_image} className=\"review-user-profile\" draggable={false} alt=\"Avatar\"/>\n                        <cite title=\"Reviewer\">{this.props.review.review.user.name}</cite>\n                    </Card.Header>\n                    <Card.Body>\n                        <blockquote className=\"text-center blockquote mb-0\">\n                            <h3>{this.props.review.name}</h3>\n                            <h3 className=\"bold\" style={{color:\"#\"+this.props.review.review.rating_color}}>{this.props.review.review.rating}</h3>\n                            <p className=\"text-left\" style={{fontSize: \"15px\"}}>{' '}{this.renderReview(280)}{' '}</p>\n                            \n                            <footer style={{position: \"absolute\", bottom: \"0px\"}} className=\"blockquote-footer\">\n                                <cite style={{fontSize: '12px'}} title='Date'>{this.props.review.review.review_time_friendly}</cite>\n                            </footer>\n                        </blockquote>\n                    </Card.Body>\n                </Card>\n        );\n\n        if(this.props.review.id) {\n            return (\n                <Link className=\"link\" to={{pathname: `/fud?res=${this.props.review.id}`}}>\n                    {card}\n                </Link>\n            );\n        } else {\n            return card;\n        }\n    }\n\n    render() {\n        return this.renderCardLink();\n    }\n}\n\nexport default ReviewCard;","import React from 'react';\nimport '../../css/App.css';\n\nimport ReviewCard from './ReviewCard.jsx';\n\nimport axios from 'axios';\nimport { Row, Col } from 'react-bootstrap';\n\nclass RandomReviews extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            reviews: []\n        }\n\n        this.renderReviews = this.renderReviews.bind(this);\n    };\n\n    componentDidMount() {\n\n        const randomCuisineNumber = Math.floor(Math.random() * this.props.cuisines.length);\n        const randomCuisine = this.props.cuisines[randomCuisineNumber].cuisine_id;\n\n        axios.get('https://developers.zomato.com/api/v2.1/search?entity_id=89&entity_type=city&cuisines='+ randomCuisine + '&sort=rating', this.props.api_key).then(res => {\n            let list=[];\n            \n            for(let i=0; i<3; i++) {\n                let obj = {};\n                let randomRestaurantNumber = Math.floor(Math.random() * res.data.restaurants.length);\n\n                obj.id = res.data.restaurants[randomRestaurantNumber].restaurant.id;\n                obj.name = res.data.restaurants[randomRestaurantNumber].restaurant.name\n                list.push(obj);\n            }\n\n            return list;\n        }).then((res => {\n            res.forEach(obj => {\n                axios.get('https://developers.zomato.com/api/v2.1/reviews?res_id='+obj.id, this.props.api_key).then(res => {\n\n                    let listOfReviews = this.state.reviews;\n\n                    let reviewObject = {};\n                    reviewObject.id = obj.id\n                    reviewObject.name = obj.name;\n                    reviewObject.review = res.data.user_reviews[Math.floor(Math.random() * res.data.user_reviews.length)].review\n\n                    listOfReviews.push(reviewObject);\n\n                    this.setState({\n                        reviews: listOfReviews\n                    });\n                });\n            });\n        }));\n    };\n\n   renderReviews() {\n        let { reviews } = this.state;\n        let listOfReviews = [];\n        \n        reviews.sort((a, b) => b.review.rating - a.review.rating);\n\n        reviews.forEach(review => {\n            listOfReviews.push(\n                <Col key={review.id} md={4}>\n                    <ReviewCard review={review}/>\n                </Col>\n            )\n        });\n\n        return(\n            <Row>\n                {listOfReviews}\n            </Row>\n        );\n    } \n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderReviews()} \n            </React.Fragment>\n        );\n    }\n}\n\nexport default RandomReviews;","const Configuration = {\n    API_KEY: \"2281a702bbb4aece2a8f6a95c0e665ee\"\n};\n\nexport { Configuration };","import React from 'react';\nimport '../../css/App.css';\n\nimport axios from 'axios';\n\nimport RestaurantCard from '../component/RestaurantCard.jsx';\nimport Jumbo from '../component/Jumbo.jsx';\nimport RandomReviews from '../component/RandomReviews.jsx';\n\nimport { Configuration } from '../configuration.js';\n\nimport { Link } from \"react-router-dom\";\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcuisines: [],\n\t\t\tsearchResult: [],\n\t\t\tchosenFilter: \"Search\",\n\t\t\tquery: \"\",\n            searching: false,\n\t\t\tapi_key: { headers: {'user-key': Configuration.API_KEY} },\n    \n            restaurantJumbo: {\n                name: \"\",\n                imageUrl: \"\",\n                price: \"\",\n                cuisines: \"\",\n                rating: \"\",\n                numberOfRatings: \"\"\n            },\n\n\t\t\tviewingRestaurant: \"\"\n\t\t}\n\n\t\tthis.selectFilter = this.selectFilter.bind(this);\n        this.search = this.search.bind(this);\n        this.renderRandomPopularRestaurant = this.renderRandomPopularRestaurant.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\n\t\tdocument.title = \"Füd\";\n\n        this.renderRandomPopularRestaurant();\n\t\t\n\t\taxios.get('https://developers.zomato.com/api/v2.1/cuisines?city_id=89', this.state.api_key).then(cuisineList => {\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcuisines: cuisineList.data.cuisines\n\t\t\t});\n\t\t});\n    };\n    \n    renderRandomPopularRestaurant() {\n\n        axios.get('https://developers.zomato.com/api/v2.1/location_details?entity_id=89&entity_type=city', this.state.api_key).then(res => {\n\n            let dollarSign = \"\";\n            let randomlySelectedIndex = Math.floor(Math.random() * res.data.best_rated_restaurant.length);\n\n            for(let i=0; i < res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.price_range; i++) {\n                dollarSign = dollarSign.concat(\"$\");\n\t\t\t}\n\t\t\t\n            this.setState({\n                restaurantJumbo: {\n                    name: res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.name,\n                    imageUrl: res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.featured_image,\n                    price: dollarSign,\n                    cuisines: res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.cuisines,\n                    rating: res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.user_rating.aggregate_rating,\n                    numberOfRatings: res.data.best_rated_restaurant[randomlySelectedIndex].restaurant.all_reviews_count\n                }\n            });\n        });\n    };\n\n\tselectFilter(filter) {\n        this.setState({\n            chosenFilter: filter\n        });\n\t};\n\t\n\tsearch(query) {\t\n\t\tif(this.state.searching === false) {\n\t\t\tthis.setState({\n\t\t\t\tsearching: true\n\t\t\t});   \n\t\t}\n\n\t\tif(this.state.chosenFilter === \"Cuisines\") {\n            let temp = true;\n\n\t\t\tthis.state.cuisines.forEach(cuisine => {\n\t\t\t\tif(query.toLowerCase() === cuisine.cuisine.cuisine_name.toLowerCase()) {\n                    temp = false;\n\t\t\t\t\taxios.get('https://developers.zomato.com/api/v2.1/search?entity_id=89&entity_type=city&count='+20+'&cuisines='+cuisine.cuisine.cuisine_id, this.state.api_key).then(res => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tsearchResult: res.data.restaurants,\n                            searching: false,\n                            resultsFound: true,\n\t\t\t\t\t\t\tquery: query\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n            });\n\n            if(temp) {\n                this.setState({\n                    searchResult: [],\n                    searching: false,\n                    resultsFound: true,\n                    query: query\n                });\n            }\n\t\t} else {\n\t\t\taxios.get('https://developers.zomato.com/api/v2.1/search?entity_id=89&entity_type=city&q='+query+'&start&count='+20, this.state.api_key).then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsearchResult: res.data.restaurants,\n                    searching: false,\n                    resultsFound: true,\n\t\t\t\t\tquery: query\n\t\t\t\t});\n        \t});\n\t\t}\n\t};\n\t\n\trenderRestaurantCard() {\n\t\tif(this.state.searchResult.length !== 0) {\n\t\t\tlet list = [];\n\n\t\t\tlist.push(<Col key={\"results\"} md={12} className=\"text-left\">Results for {this.state.query}</Col>)\n\n\t\t\tthis.state.searchResult.forEach(item => {\n\t\t\t\tlist.push(\n\t\t\t\t\t<Col key={this.props.id} md={4}>\n\t\t\t\t\t\t<Link to={{pathname: `/fud?res=${item.restaurant.id}`}}>\n\t\t\t\t\t\t\t<RestaurantCard \n\t\t\t\t\t\t\t\tviewDetails={this.viewDetails}\n\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\tname={item.restaurant.name}\n\t\t\t\t\t\t\t\taddress={item.restaurant.location.address}\n\t\t\t\t\t\t\t\trating={item.restaurant.user_rating.aggregate_rating} \n\t\t\t\t\t\t\t\tnumberOfRatings={item.restaurant.all_reviews_count}\n\t\t\t\t\t\t\t\tprice={item.restaurant.price} \n\t\t\t\t\t\t\t\timage={item.restaurant.featured_image}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// list.push(\n\t\t\t// \t<Col key={this.props.id} md={4}>\n\t\t\t// \t\t<Jumbotron onClick={() => this.search(this.state.query, 2)} className=\"text-center result-card\" style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))`}}>\n\t\t\t// \t\t\t<h3 className=\"white\">Load More Results</h3>\n\t\t\t// \t\t</Jumbotron>\n\t\t\t// \t</Col>\n\t\t\t// );\n\n\t\t\treturn list;\n\t\t} else {\n            return (\n                <Col md={12}>\n                    <p>No results found for {this.state.query}</p>\n                </Col>\n            );\n        }\n\t};\n\n  \trender() {\n\n\t\tlet underJumbo = (this.state.resultsFound || this.state.cuisines.length === 0) ? <Container><Row>{this.renderRestaurantCard()}</Row></Container> : <div style={{marginLeft: \"15px\", marginRight: \"15px\"}}><h5>Reviews</h5><RandomReviews api_key={this.state.api_key} cuisines={this.state.cuisines}/></div>;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n                <Jumbo \n                    restaurantJumbo={this.state.restaurantJumbo}\n\t\t\t\t\tselectFilter={this.selectFilter}\n\t\t\t\t\tchosenFilter={this.state.chosenFilter} \n\t\t\t\t\tsearching={this.state.searching} \n                    search={this.search}\n\t\t\t\t/>\n\t\t\t\t{underJumbo}\n\t\t\t</React.Fragment>\n\t\t);\n  \t}\n}\n\nexport default Home;\n","import React from 'react';\nimport '../../css/App.css';\n\nclass Badge extends React.Component {\n\n    render() {\n\n        let trigger = (this.props.trigger) ? \"green\" : \"lightgray\"\n\n        return (\n            <div style={{display: \"inline-block\", maxWidth: \"200px\", border: \"2px solid \" + trigger, color: trigger, padding: \"5px 5px 5px 5px\", borderRadius: \"20px\"}}>\n                {this.props.icon} <span className=\"badge-text\">{this.props.title}</span>\n            </div>\n        );\n    }\n}\n\nexport default Badge;","import React from 'react';\nimport '../../css/App.css';\n\nimport Jumbo from '../component/Jumbo.jsx';\nimport ReviewCard from '../component/ReviewCard.jsx';\nimport Badge from '../component/Badge.jsx';\n\nimport { Configuration } from '../configuration.js';\nimport { Container, Col, Row } from 'react-bootstrap';\n\nimport axios from 'axios';\n\nclass Restaurant extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: \"-1\",\n            listOfReviews: [],\n            hasTableBooking: 0,\n            hasOnlineDelivery: 0,\n            isDeliveringNow: 0,\n            \n            restaurantJumbo: {\n                name: \"\",\n                imageUrl: \"\",\n                price: \"\",\n                cuisines: \"\",\n                rating: \"\",\n                numberOfRatings: \"\",\n                timings: \"\",\n                location: {},\n            },\n            api_key: { headers: {'user-key': Configuration.API_KEY } }\n        }\n\n        this.renderReviews = this.renderReviews.bind(this);\n    };\n    \n    componentDidMount() {\n        axios.get('https://developers.zomato.com/api/v2.1/restaurant?res_id='+this.props.match.params.id, this.state.api_key).then(res => {\n            \n            let dollarSign = \"\";\n            for(let i=0; i < res.data.price_range; i++) {\n                dollarSign = dollarSign.concat(\"$\");\n            }\n            \n            document.title = \"Füd | \" + res.data.name;\n\n            this.setState({\n                id: res.data.id,\n                hasTableBooking: res.data.has_table_booking,\n                hasOnlineDelivery: res.data.has_online_delivery,\n                isDeliveringNow: res.data.is_delivering_now,\n                rating: res.data.user_rating.aggregate_rating,\n                numberOfRatings: res.data.all_reviews_count,\n                restaurantJumbo: {\n                    name: res.data.name,\n                    imageUrl: res.data.featured_image,\n                    price: dollarSign,\n                    cuisines: res.data.cuisines,\n                    location: res.data.location,\n                    timings: res.data.timings,\n                }\n            });\n        });\n    }\n\n    renderReviews() {\n\n        if(this.state.listOfReviews.length === 0) {\n            axios.get('https://developers.zomato.com/api/v2.1/reviews?res_id='+this.state.id, this.state.api_key).then(res => {\n                let listOfReviews = [];\n            \n                res.data.user_reviews.forEach(review => {\n                    listOfReviews.push(\n                        review\n                    );\n                });\n                \n                this.setState({\n                    listOfReviews: listOfReviews\n                });\n            });\n        } else {\n            let reviews =[];\n\n            reviews.push(\n                <Col className=\"badge-placement text-left\" md={12}>\n                    <p className=\"bold\">Rating : {this.state.rating} {(this.state.numberOfRatings.length === 0) ? \"\" : \"(\"+this.state.numberOfRatings+\")\"}</p>\n                </Col>\n            )\n\n            this.state.listOfReviews.forEach(review => {\n                reviews.push(\n                    <Col md={12}>\n                        <ReviewCard review={review} />\n                    </Col>\n                );\n            });\n\n            return reviews;\n        }\n    }\n\n    render() {\n        return (    \n            <React.Fragment>\n                <Jumbo restaurantJumbo={this.state.restaurantJumbo} />\n                <Container style={{marginLeft: \"10px\", marginRight: \"10px\", maxWidth: \"100%\"}}>\n                    <Row className=\"badge-row\">\n                        <Col className=\"badge-placement text-right\" md={4}>\n                            <Badge trigger={this.state.hasTableBooking} icon={<i style={{marginLeft: \"5px\", marginRight: \"5px\"}} className=\"fas fa-users\"></i>} title={\"Table Booking\"} />\n                        </Col>\n\n                        <Col className=\"badge-placement text-center\" md={4}>\n                            <Badge trigger={this.state.hasOnlineDelivery} icon={<i style={{marginLeft: \"5px\", marginRight: \"5px\"}} className=\"fas fa-desktop\"></i>} title={\"Online Delivery\"} />\n                        </Col>\n\n                        <Col className=\"badge-placement text-left\" md={4}>\n                            <Badge trigger={this.state.isDeliveringNow} icon={<i style={{marginLeft: \"5px\", marginRight: \"5px\"}} className=\"fas fa-car-side\"></i>} title={\"Delivering Now\"} />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={{ span: 6, offset: 3 }}>\n                            {this.renderReviews()}\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Restaurant;","import React from 'react';\nimport '../../css/App.css';\n\nimport IconWhite from '../../img/icon-white.png';\n\nimport { Link } from \"react-router-dom\";\n\nimport {Navbar} from 'react-bootstrap';\n\nimport {withRouter} from 'react-router-dom';\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    };\n\n    render() {\n\n        return (\n            <Navbar fixed=\"top\" style={{backgroundColor: \"transparent\"}}>\n                <Navbar.Brand><font className=\"white\"><Link to =\"/fud\"><img src={IconWhite} height={30} draggable={false} alt=\"Icon\" /></Link></font></Navbar.Brand>\n            </Navbar>\n        );\n    }\n}\n\nexport default withRouter(NavBar);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './js/view/Home.jsx';\nimport Restaurant from './js/view/Restaurant.jsx';\n\nimport Navbar from './js/component/NavBar.jsx';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\n\nconst Root = () => {\n    return (\n        <React.Fragment>\n            <Router>\n                <Navbar />\n                <Switch>\n                    <Route exact path={\"/fud\"} component={Home} />\n                    <Route path=\"/fud?res=:id\" component={Restaurant} />\n                    <Redirect from=\"/fud?res=\" to=\"/fud\" />\n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}